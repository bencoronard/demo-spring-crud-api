server:
  port: ${SERVER_PORT}

spring:
  application:
    name: "${SERVICE_NAME}"

  profiles:
    active: "${SERVER_ENV}"

  datasource:
    url: "jdbc:postgresql://${DATASOURCE_HOST}:${DATASOURCE_PORT}/${DATASOURCE_DB}"
    username: "${DATASOURCE_USERNAME}"
    password: "${DATASOURCE_PASSWORD}"

  sql:
    init:
      mode: "never"
      # platform: "postgresql"
      # schema-locations: "classpath:db/migration/schema-postgresql.sql"
      # data-locations: "optional:classpath:db/migration/data-postgresql.sql"

  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: "validate"
    
  quartz:
    job-store-type: "jdbc"
    jdbc:
      initialize-schema: "never"
    properties:
      org:
        quartz:
          jobStore:
            tablePrefix: "admin_portal.QRTZ_"
            driverDelegateClass: "org.quartz.impl.jdbcjobstore.PostgreSQLDelegate"

  threads:
    virtual:
      enabled: true

management:
  endpoints:
    enabled-by-default: false
    jmx:
      exposure:
        exclude: "*"
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      enabled: true
      cache:
        time-to-live: "5s"
    info:
      enabled: true
      cache:
        time-to-live: "10s"
  info:
    java:
      enabled: true
    env:
      enabled: true

api:
  internal:
    secret:
      key: "${SERVER_API_KEY}"
      
  external:
    gateway:
      uri: "${GATEWAY_URI}"
      secret:
        key: "${GATEWAY_API_KEY}"
        
logging:
  include-application-name: false
  file:
    name: "logs/app.log"

---
# Environment: dev
spring:
  config:
    activate:
      on-profile: "dev"

  jpa:
    show-sql: true

info:
  app:
    environment: "dev"

---
# Environment: prod
spring:
  config:
    activate:
      on-profile: "prod"

info:
  app:
    environment: "prod"

